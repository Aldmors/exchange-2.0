// <auto-generated />
using System;
using ExchangeServerAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeServerAPI.Migrations
{
    [DbContext(typeof(ExchangeServerContext))]
    [Migration("20240513100312_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExchangeServerAPI.Models.Authentication", b =>
                {
                    b.Property<int>("AuthenticationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthenticationId"));

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TwoFa")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.HasKey("AuthenticationId");

                    b.ToTable("Authentication");
                });

            modelBuilder.Entity("ExchangeServerAPI.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Type")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.HasKey("DocumentId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("ExchangeServerAPI.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("PermissionId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("ExchangeServerAPI.Models.Label", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabelId"));

                    b.Property<string>("Country")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingId")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ShippingType")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Status")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.HasKey("LabelId");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("ExchangeServerAPI.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateGroups")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateUsers")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteGroups")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteUsers")
                        .HasColumnType("bit");

                    b.Property<bool>("EditGroups")
                        .HasColumnType("bit");

                    b.Property<bool>("EditUsers")
                        .HasColumnType("bit");

                    b.Property<bool>("Packaging")
                        .HasColumnType("bit");

                    b.Property<bool>("ProblemSolving")
                        .HasColumnType("bit");

                    b.Property<bool>("Statistics")
                        .HasColumnType("bit");

                    b.HasKey("PermissionId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("ExchangeServerAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("PasswordAuthenticationId")
                        .HasColumnType("int");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.HasKey("UserId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PasswordAuthenticationId");

                    b.HasIndex("PermissionId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ExchangeServerAPI.Models.Group", b =>
                {
                    b.HasOne("ExchangeServerAPI.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("ExchangeServerAPI.Models.User", b =>
                {
                    b.HasOne("ExchangeServerAPI.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ExchangeServerAPI.Models.Authentication", "Password")
                        .WithMany()
                        .HasForeignKey("PasswordAuthenticationId");

                    b.HasOne("ExchangeServerAPI.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId");

                    b.Navigation("Group");

                    b.Navigation("Password");

                    b.Navigation("Permission");
                });
#pragma warning restore 612, 618
        }
    }
}
